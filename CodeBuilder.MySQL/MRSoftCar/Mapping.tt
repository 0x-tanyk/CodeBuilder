<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>

<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text.RegularExpressions" #>

<#@ include file="$(ProjectDir)\Config\DbConnection.ttinclude" #>
<#@ include file="$(ProjectDir)\Config\TemplateComment.ttinclude" #>
<#@ include file="$(ProjectDir)\Entity\MySQLDbField.ttinclude" #>
<#@ include file="$(ProjectDir)\Entity\MySQLDbTable.ttinclude" #>
<#@ include file="$(ProjectDir)\Helper\MySQLDbHelper.ttinclude" #>
<#@ include file="$(ProjectDir)\Helper\MySQLCLRTypeHelper.ttinclude" #>
<#@ include file="$(ProjectDir)\Helper\StringHelper.ttinclude" #>
<#@ include file="AMRSoftCar.ttinclude" #>

<#   
    var entities = MySQLDbHelper.GetEntities(DbConnection.CONNECTION_STRING, AMRSoftCar.DB_NAME);
    foreach(MySQLDbTable entity in entities)
    {
		var name = StringHelper.ToBigHump(entity.Name);
        var comment = entity.Comment;
#>
//-----------------------------------------------------------------------
// <copyright file="<#=name#>.cs" company="<#=TemplateComment.FILE_COPYRIGHT#>">
// * Copyright (C) <#=TemplateComment.FILE_COPYRIGHT_YEAR#> <#=TemplateComment.FILE_COPYRIGHT#> All Rights Reserved
// * Version : <#=TemplateComment.SDK_VERSION#>
// * Author  : <#=TemplateComment.FILE_AUTHOR#>
// * FileName: <#=name#>.cs
// * DateTime: <#=TemplateComment.FILE_TIME#>
// </copyright>
//-----------------------------------------------------------------------
using MRSoftCar.Dto;
using MRSoftCar.Entity;
using AutoMapper;

namespace <#=AMRSoftCar.FILE_NAMESPACE#>.Mapping.Profiles
{
    /// <summary>
    /// <#=comment#>映射
    /// </summary>
    public class <#=name#>Profile : Profile
    {
        public  <#=name#>Profile()
        {
            CreateMap<<#=name#>InputDto,<#=name#>>();
        }
    }
}
<#
        var path = @$"{Host.ResolveAssemblyReference("$(ProjectDir)")}{AMRSoftCar.OUTPUT_PATH}\Profile";
        if(!Directory.Exists(path))
        {
            Directory.CreateDirectory(path);
        }
        string fileName = string.Format(@"{0}\{1}.cs", path, $"{name}Profile");
        File.WriteAllText(fileName , this.GenerationEnvironment.ToString());
        this.GenerationEnvironment.Clear();
    }
 #>